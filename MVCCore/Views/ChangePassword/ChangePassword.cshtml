@model MVCCore.Models.ChangePasswordModel
@{
    ViewData["Title"] = "Change Password";
}

@using (Html.BeginForm())
{

    <div class="limiter">
        <div class="container-login100">
            <div class="wrap-login100 p-l-55 p-r-55 p-t-65 p-b-50">

                <span class="login100-form-title p-b-33">
                    Change Password  
                </span>

                <div class="editor-label">
                    @Html.LabelFor(m => m.CurrentPassword)
                </div>
                <div class="editor-field custominputfield" style="width: 430px !important;">
                    @Html.TextBoxFor(m => m.CurrentPassword, new { placeholder = "enter current password" })
                    @Html.ValidationMessageFor(m => m.CurrentPassword)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(m => m.Password)
                </div>
                <div class="editor-field custominputfield" style="width: 430px !important;">
                    @Html.PasswordFor(m => m.Password, new { placeholder = "enter password" })
                    @Html.ValidationMessageFor(m => m.Password)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(m => m.ConfirmPassword)
                </div>
                <div class="editor-field custominputfield" style="width: 430px !important;">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { placeholder = "reenter password" })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword)
                </div>

                <div class="divbutton">
                    <input type="submit" value="Change Password" class="custombutton" />
                    <input type="submit" value="Back to Login"   asp-controller="Login" asp-action="Login" formmethod="post" class="custombutton" />
                     
                </div>

                @ViewBag.SuccessMessage
            </div>
        </div>

    </div>
}


